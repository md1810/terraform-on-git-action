name: Manual trigger for Destroy Planned Terraform
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'dev'

jobs:
  destroy:
    name: "Destroy AWS"
    runs-on: ubuntu-latest
    steps:
    
        - name: Checkout Repo
          uses: actions/checkout@v1

        - name: Terraform Init
          uses: hashicorp/terraform-github-actions/init@v0.4.0
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
            TF_ACTION_WORKING_DIR: 'terraform'
            AWS_REGION: 'eu-west-1'
            AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        - name: Terraform Validate
          uses: hashicorp/terraform-github-actions/validate@v0.3.7
    
        
        
        - name: AWS Plan Copy
          run: aws s3 cp s3://github-terraform-statefile/some_environment/terraform.tfstate terraform.tfstate
          id: copy
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: 'eu-west-1'
            
            
            #terraform providers
            #terraform state replace-provider registry.terraform.io/-/aws  registry.terraform.io/hashicorp/aws -auto-approve
        - name: Replace provider Registry.terraform.io
          id: replace
          run: |
            terraform state replace-provider -auto-approve -- -/null registry.terraform.io/hashicorp/aws
            

        - name: Show Destroy plan
          run: terraform plan -destroy
          continue-on-error: true


        - name: Destroy resources jobs
          id: destroy
          run: |
            terraform destroy -auto-approve            

        - name: Delete plan file
          if: steps.destroy.outcome == 'success'
          run: aws s3 rm s3://github-terraform-statefile/some_environment/terraform.tfstate
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: 'eu-west-1'
